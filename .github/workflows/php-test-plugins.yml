name: Unit Testing for Plugins

on:
  push:
    branches:
      - trunk
      - 'release/**'
    # Only run if PHP-related files changed.
    paths:
      - '.github/workflows/php-test-plugins.yml'
      - 'plugins/**.php'
      - '.wp-env.json'
      - '**/package.json'
      - 'package-lock.json'
      - 'phpunit.xml.dist'
      - 'tests/multisite.xml'
      - 'composer.json'
      - 'composer.lock'
  pull_request:
    # Only run if PHP-related files changed.
    paths:
      - '.github/workflows/php-test-plugins.yml'
      - 'plugins/**.php'
      - '.wp-env.json'
      - '**/package.json'
      - 'package-lock.json'
      - 'phpunit.xml.dist'
      - 'tests/multisite.xml'
      - 'composer.json'
      - 'composer.lock'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  php-test-plugins:
    name: "PHP ${{ matrix.php }} / WP ${{ matrix.wp }}"
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        php: ['8.2', '8.1', '8.0', '7.4', '7.3', '7.2']
        wp: [ 'latest' ]
        include:
          - php: '7.4'
            wp: '6.5'
          - php: '8.3'
            wp: 'trunk'
    env:
      WP_ENV_PHP_VERSION: ${{ matrix.php }}
      WP_ENV_CORE: ${{ matrix.wp == 'trunk' && 'WordPress/WordPress' || format( 'https://wordpress.org/wordpress-{0}.zip', matrix.wp ) }}
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
      - uses: actions/checkout@v4
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: npm install
        run: npm ci
      - name: Build assets
        run: npm run build
      - name: Install WordPress
        run: npm run wp-env start
      - name: Composer Install
        run: npm run wp-env run tests-cli -- --env-cwd="wp-content/plugins/$(basename $(pwd))" composer install --no-interaction --no-progress
      - name: Running single site unit tests
        run: npm run test-php -- --coverage-clover=coverage.xml
      - name: Running multisite unit tests
        run: npm run test-php-multisite -- --coverage-clover=coverage-multisite.xml
      - name: Upload single site coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: unittests
          name: ${{ matrix.php }}-single-site-coverage
      - name: Upload multisite coverage reports to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage-multisite.xml
          flags: multisite
          name: ${{ matrix.php }}-multisite-coverage
