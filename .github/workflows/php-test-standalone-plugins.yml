name: Integration Tests for Standalone Plugins

on:
  push:
    branches:
      - trunk
      - 'release/**'
    # Only run if PHP-related files changed.
    paths:
      - '.github/workflows/php-test-standalone-plugins.yml'
      - 'plugin-tests/**'
      - '**.php'
      - '.wp-env.json'
      - '**/package.json'
      - 'package-lock.json'
      - 'phpunit.xml.dist'
      - 'composer.json'
      - 'composer.lock'
  pull_request:
    branches:
      - trunk
      - 'release/**'
      - 'feature/**'
    # Only run if PHP-related files changed.
    paths:
      - '.github/workflows/php-test-standalone-plugins.yml'
      - 'plugin-tests/**'
      - '**.php'
      - '.wp-env.json'
      - '**/package.json'
      - 'package-lock.json'
      - 'phpunit.xml.dist'
      - 'composer.json'
      - 'composer.lock'
    types:
      - opened
      - reopened
      - synchronize

jobs:
  php-test:
    name: PHP Integration Tests for Standalone Plugins
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.2', '8.1', '8.0', '7.4', '7.3', '7.2', '7.1', '7.0' ]
        wp: [ 'latest' ]
        include:
        - php: '7.4'
          wp: '6.3'
        - php: '8.3'
          wp: 'trunk'
    env:
      WP_ENV_PHP_VERSION: ${{ matrix.php }}
      WP_ENV_CORE: ${{ matrix.wp == 'trunk' && 'WordPress/WordPress' || format( 'https://wordpress.org/wordpress-{0}.zip', matrix.wp ) }}
    steps:
      - uses: styfle/cancel-workflow-action@0.11.0
      - uses: actions/checkout@v3
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Setup Node.js (.nvmrc)
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm
      - name: npm install
        run: npm ci
      - name: Build plugin assets
        run: npm run build
      - name: General debug information
        run: |
          npm --version
          node --version
          composer --version
          php -v
      - name: Building standalone plugins
        run: npm run build-plugins
      - name: Running single site standalone plugin integration tests
        run: npm run test-plugins
      - name: Running multisite standalone plugin integration tests
        run: npm run test-plugins-multisite
